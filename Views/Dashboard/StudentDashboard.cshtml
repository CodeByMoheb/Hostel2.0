@model Hostel2._0.Models.ViewModels.DashboardViewModels.StudentDashboardViewModel
@using Hostel2._0.Models.Enums
@{
    ViewData["Title"] = "Student Dashboard";
}
@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body, .container-fluid { font-family: 'Inter', Arial, sans-serif; background: linear-gradient(135deg, #e0e7ff 0%, #f4f6fa 100%); }
        .welcome-bar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: linear-gradient(90deg, #1976D2 70%, #00BFAE);
            color: #fff;
            border-radius: 14px;
            box-shadow: 0 2px 12px rgba(25,118,210,0.09);
            padding: 0.7rem 1.5rem;
            margin-bottom: 1.2rem;
            animation: fadeIn 0.7s;
        }
        .welcome-avatar {
            width: 44px; height: 44px;
            border-radius: 50%;
            background: #fff;
            display: flex; align-items: center; justify-content: center;
            font-size: 1.5rem;
            color: #1976D2;
            box-shadow: 0 2px 8px rgba(0,191,174,0.13);
            margin-right: 1rem;
        }
        .welcome-name {
            font-size: 1.13rem;
            font-weight: 700;
            letter-spacing: 0.5px;
        }
        .profile-btn {
            background: #fff;
            color: #1976D2;
            border-radius: 8px;
            font-weight: 600;
            font-size: 1.01rem;
            padding: 0.4rem 1.2rem;
            border: none;
            transition: background 0.18s, color 0.18s;
            box-shadow: 0 2px 8px rgba(67,160,71,0.09);
        }
        .profile-btn:hover { background: #1976D2; color: #fff; }
        .stat-row {
            display: flex;
            gap: 1.1rem;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
        }
        .stat-card {
            background: #fff;
            border-radius: 13px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.07);
            padding: 0.8rem 1.1rem;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            min-width: 150px;
            flex: 1 1 150px;
            animation: fadeInUp 0.7s;
        }
        .stat-icon { font-size: 1.3rem; margin-bottom: 0.3rem; opacity: 0.85; }
        .stat-value { font-size: 1.15rem; font-weight: 700; margin-bottom: 0.05rem; color: #1976D2; }
        .stat-label { font-size: 0.97rem; color: #888; font-weight: 500; }
        .pay-btn { background: #43A047; color: #fff; border-radius: 8px; font-weight: 600; font-size: 1.01rem; padding: 0.5rem 1.5rem; border: none; transition: background 0.18s, box-shadow 0.18s; box-shadow: 0 2px 8px rgba(67,160,71,0.09); }
        .pay-btn:hover { background: #1976D2; color: #fff; }
        .table th, .table td { font-size: 0.97rem; padding: 0.5rem 0.8rem; }
        .table th { font-weight: 600; color: #1976D2; background: #F4F6FA; }
        .badge { border-radius: 6px; font-size: 0.85rem; padding: 0.3em 0.7em; font-weight: 500; }
        .bg-success { background: #43A047 !important; color: #fff !important; }
        .bg-warning { background: #FFA000 !important; color: #333 !important; }
        .bg-info { background: #1976D2 !important; color: #fff !important; }
        .bg-danger { background: #E74C3C !important; color: #fff !important; }
        @@keyframes fadeIn { from { opacity: 0; transform: translateY(-20px);} to { opacity: 1; transform: translateY(0);} }
        @@keyframes fadeInUp { from { opacity: 0; transform: translateY(30px);} to { opacity: 1; transform: translateY(0);} }
        .section-header {
            font-size: 1.13rem;
            font-weight: 700;
            color: #1976D2;
            margin-bottom: 0.7rem;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            border-left: 4px solid #00BFAE;
            padding-left: 0.6rem;
        }
        .dashboard-card {
            background: #fff;
            border-radius: 13px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.07);
            padding: 1.1rem 1.2rem;
            margin-bottom: 1.1rem;
            animation: fadeIn 0.7s;
        }
    </style>
}
<div class="container-fluid py-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @Html.Raw(TempData["SuccessMessage"])
        </div>
    }
    <!-- Welcome Bar -->
    <div class="welcome-bar">
        <div style="display: flex; align-items: center;">
            <div class="welcome-avatar">
                <i class="fas fa-user-circle"></i>
            </div>
            <span class="welcome-name">Welcome, @Model.Student.FullName</span>
        </div>
        <a href="/Student/Profile" class="profile-btn"><i class="fas fa-id-card"></i> View Profile</a>
    </div>
    <!-- Metrics Row -->
    <div class="stat-row">
        <div class="stat-card">
            <i class="fas fa-money-bill-wave stat-icon text-success"></i>
            <span class="stat-label">Total Paid</span>
            <span class="stat-value">৳@Model.TotalPaidAmount.ToString("N2")</span>
        </div>
        <div class="stat-card">
            <i class="fas fa-file-invoice-dollar stat-icon text-warning"></i>
            <span class="stat-label">Pending Payment</span>
            <span class="stat-value">৳@Model.PendingPaymentAmount.ToString("N2")</span>
            @if (Model.PendingPaymentAmount > 0)
            {
                <div class="mt-2">
                    <a href="/Payment/Pay" class="btn btn-warning btn-lg w-100">
                        <i class="fas fa-credit-card"></i> Pay Now
                    </a>
                    <small class="text-muted d-block mt-2">
                        <i class="fas fa-info-circle"></i> Click to pay your pending dues
                    </small>
                </div>
            }
            else
            {
                <div class="mt-2">
                    <span class="badge bg-success">All Paid</span>
                </div>
            }
        </div>
        <div class="stat-card">
            <i class="fas fa-tools stat-icon text-danger"></i>
            <span class="stat-label">Pending Requests</span>
            <span class="stat-value">@Model.PendingMaintenanceRequests</span>
        </div>
    </div>
    <!-- Payment History -->
    <div class="section">
        <div class="section-header">
            <i class="fas fa-receipt"></i> Recent Payments
            @if (Model.PendingPaymentAmount > 0)
            {
                <a href="/Payment/Pay" class="btn btn-warning btn-sm float-end">
                    <i class="fas fa-credit-card"></i> Pay Pending Dues
                </a>
            }
        </div>
        <div class="dashboard-card">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Amount</th>
                            <th>Method</th>
                            <th>Status</th>
                            <th>Receipt</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.RecentPayments.Any())
                        {
                            foreach (var payment in Model.RecentPayments)
                            {
                                <tr>
                                    <td>@payment.PaymentDate.ToString("MMM dd, yyyy")</td>
                                    <td>৳@payment.Amount.ToString("N2")</td>
                                    <td>@payment.PaymentMethod</td>
                                    <td>
                                        <span class="badge bg-@(payment.Status == PaymentStatus.Completed ? "success" : (payment.Status == PaymentStatus.Pending ? "warning text-dark" : "danger"))">
                                            @payment.Status
                                        </span>
                                    </td>
                                    <td>
                                        @if (payment.Status == PaymentStatus.Completed)
                                        {
                                            <a asp-controller="Payment" asp-action="GenerateReceipt" asp-route-id="@payment.Id" class="btn btn-sm btn-info">
                                                <i class="fas fa-receipt"></i> View Receipt
                                            </a>
                                        }
                                        else if (payment.Status == PaymentStatus.Pending)
                                        {
                                            <a href="/Payment/Pay" class="btn btn-sm btn-warning">
                                                <i class="fas fa-credit-card"></i> Pay Now
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center text-muted">
                                    No recent payments to display.
                                    @if (Model.PendingPaymentAmount > 0)
                                    {
                                        <div class="mt-2">
                                            <a href="/Payment/Pay" class="btn btn-warning btn-sm">
                                                <i class="fas fa-credit-card"></i> Make Your First Payment
                                            </a>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Maintenance Requests and Notices Tabs -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="dashboard-card">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="section-header"><i class="fas fa-tools"></i> Recent Maintenance Requests</div>
                    <a href="/MaintenanceRequest/Create" class="btn btn-success" style="font-weight:600;"><i class="fas fa-plus"></i> Request Maintenance</a>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Title</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentMaintenanceRequests.Any())
                            {
                                foreach (var req in Model.RecentMaintenanceRequests)
                                {
                                    <tr>
                                        <td>@req.CreatedAt.ToString("MMM dd, yyyy")</td>
                                        <td>@req.Title</td>
                                        <td>
                                            <span class="badge bg-@(req.Status == MaintenanceStatus.Completed ? "success" : (req.Status == MaintenanceStatus.Pending ? "warning text-dark" : "info"))">
                                                @req.Status
                                            </span>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="3" class="text-center text-muted">No maintenance requests found.</td></tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="dashboard-card">
                <div class="section-header"><i class="fas fa-bullhorn"></i> Recent Notices</div>
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Title</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentNotices.Any())
                            {
                                foreach (var notice in Model.RecentNotices)
                                {
                                    <tr>
                                        <td>@notice.CreatedAt.ToString("MMM dd, yyyy")</td>
                                        <td>@notice.Title</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="2" class="text-center text-muted">No recent notices found.</td></tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Optionally, add modal logic for profile if you want a modal instead of a link
    </script>
} 